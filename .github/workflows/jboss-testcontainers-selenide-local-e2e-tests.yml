name: 'JBoss EAP 6.4.22 Testcontainers Selenide local E2E tests (TODO: FIXME)'
on: [push]
jobs:
  jboss-testcontainers-selenide-local-e2e-tests:
    strategy:
      matrix:
        java: [11]
        os: [ubuntu-latest]
        nodejs-version: [12]
        python-version: [3.8]
        docker-version: [19.09]
        docker-channel: [stable]
    name: jboss-testcontainers-selenide-local-e2e-tests java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Git clone
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache python ${{ matrix.python-version }} deps
        uses: actions/cache@v1
        with:
          path: ~/.pip
          key: ${{ runner.os }}-${{ matrix.os }}-pip-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-pip-
      - name: Install / upgrade pip
        run: python -m pip install --upgrade pip setuptools
      - name: Install HTTPie
        run: pip install --upgrade httpie
      - name: Setup Docker ${{ matrix.docker-channel }} ${{ matrix.docker-version }}
        uses: docker-practice/actions-setup-docker@master
        with:
          docker_version: ${{ matrix.docker-version }}
          docker_channel: ${{ matrix.docker-channel }}
      - name: Cache docker ${{ matrix.docker-channel }} ${{ matrix.docker-version }}
        uses: actions/cache@v1
        with:
          path: ~/.docker
          key: ${{ runner.os }}-${{ matrix.os }}-docker-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-docker-
      - name: Setup NodeJS ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.nodejs-version }}
      - name: Cache npm ${{ matrix.nodejs-version }} deps
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ matrix.os }}-npm-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-npm-
      - name: Install npm apps (wait-port)
        run: npm install -g wait-port
      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache maven deps ~/.m2/repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ matrix.os }}-maven-
          restore-keys: |
            ${{ runner.os }}-${{ matrix.os }}-maven-
      - name: Build ui app WAR file
        run: cd $GITHUB_WORKSPACE && ./mvnw -f ui clean package
      #- name: Setup chrome driver
      #  uses: nanasess/setup-chromedriver@master
      #  with:
      #    ## Optional: do not specify to match Chrome's version
      #    #chromedriver-version: '77.0.3865.40'
      - name: Install Chromedriver
        run: |
          # Install Chromedriver
          CHROME_DRIVER_VERSION=`curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE`
          sudo wget -N https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/
          unzip ~/chromedriver_linux64.zip -d ~/
          sudo mv -f ~/chromedriver /usr/local/bin/chromedriver
          sudo chown root:root /usr/local/bin/chromedriver
          sudo chmod 0755 /usr/local/bin/chromedriver
      - name: Prepare Chromedriver
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
          echo "which chrome || echo oops which chrome"
          which chrome || echo oops which chrome
          echo "whereis chrome || echo oops whereis chrome"
          whereis chrome || echo oops whereis chrome
          echo "which firefox || echo oops which firefox"
          which firefox || echo oops which firefox
          echo "whereis firefox || echo oops whereis firefox"
          whereis firefox || echo oops whereis firefox
      #- name: Run testcontainers tests apps
      #  run: cd $GITHUB_WORKSPACE && ./mvnw -f jboss-testcontainers-selenide-local-e2e-tests clean test -Dselenide.browser=firefox -Dselenide.timeout=12345
      ##TODO: FIXME: for some reasons it doesn't worked at all... yet
